name: CI

on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:

jobs:
  shellcheck:
    name: Shellcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run ShellCheck
        run: |
          sudo apt-get install shellcheck
          shopt -s globstar; shellcheck script/**/*.sh

  build:
    name: ${{ matrix.friendlyName }} ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-10.15, windows-2019, ubuntu-18.04]
        arch: [32, 64]
        include:
          - os: macos-10.15
            friendlyName: macOS
            targetPlatform: macOS
          - os: windows-2019
            friendlyName: Windows
            targetPlatform: win32
          - os: ubuntu-18.04
            friendlyName: Linux
            targetPlatform: ubuntu
        exclude:
          - os: macos-10.15
            arch: 32
          - os: ubuntu-18.04
            arch: 32
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          # Needed for script/package.sh to work
          fetch-depth: 0
      - name: Install dependencies
        run: npm install
      - name: Check formatting
        run: npm run prettier
      - name: Build tools
        run: npm run check
      - name: Install extra dependencies for building Git on Ubuntu
        if: matrix.targetPlatform == 'ubuntu'
        run: sudo apt-get install libcurl4-openssl-dev libexpat1-dev gettext
      - name: Build
        shell: bash
        run: script/build.sh
        env:
          TARGET_PLATFORM: ${{ matrix.targetPlatform }}
          TARGET_ARCH: ${{ matrix.arch }}
      - name: Package
        shell: bash
        run: script/package.sh
        env:
          TARGET_PLATFORM: ${{ matrix.targetPlatform }}
          TARGET_ARCH: ${{ matrix.arch }}
      - name: Upload ouptut artifacts
        uses: actions/upload-artifact@v2
        with:
          name:
            dugite-native-${{ matrix.targetPlatform }}-${{ matrix.arch }}-output
          path: ./output
          retention-days: 5

  release:
    name: Create GitHub release
    needs: build
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: './artifacts'

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: './artifacts'

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Git ${{ github.ref }}
          body: |
            TODO add release notes
          draft: true
          prerelease: false

      - name: Install glob for release script
        run: npm i glob

      - name: Upload release assets
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          # Workaround since actions/upload-release-asset doesn't support wilcard paths
          script: |
            const script = require(`${process.env.GITHUB_WORKSPACE}/script/create-release.js`);
            const artifactsDir = `${process.env.GITHUB_WORKSPACE}/artifacts`;
            const releaseId = '${{ steps.create_release.outputs.id }}';
            console.log(script({github, context, artifactsDir, releaseId}));
